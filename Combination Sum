class Solution {
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<List<Integer>> list = new ArrayList<List<Integer>>();
        Arrays.sort(candidates);
        backtrack(list,new ArrayList<>(),candidates,target,0);
        return list;
    }
    
    public void backtrack(List<List<Integer>> list, List<Integer> tempList, int[] arr, int remain, int start) {
        if(remain < 0) return;
        if(remain == 0) list.add(new ArrayList<>(tempList));
        else {
            for(int i=start;i<arr.length;i++) {
                tempList.add(arr[i]);
                backtrack(list,tempList,arr,remain-arr[i],i);
                tempList.remove(tempList.size()-1);
            }
        }
    }
}
